
PPP_IFACE="$1";
PPP_TTY="$2";
PPP_SPEED="$3";
PPP_LOCAL="$4";
PPP_REMOTE="$5";
PPP_IPPARAM="$6";

. /lib/functions.sh

local rulefile=/var/gfw-vpn.user
local enabled
local deleted=0
local mark

config_load gfw-vpn
config_get_bool enabled general enabled

delete_rule() {
	[ $deleted -eq 1 ] && return

	local interface=$1

	mark=$(grep gfw$interface /etc/iproute2/rt_tables | cut -f1)

	iptables -t mangle -D PREROUTING -m set ! --match-set whiteip src -m set ! --match-set whiteip dst -m set ! --match-set whitezone dst -j gfw$interface
	iptables -t mangle -D OUTPUT -m set ! --match-set whiteip src -m set ! --match-set whiteip dst -m set ! --match-set whitezone dst -j gfw$interface
	iptables -t mangle -D FORWARD -m set ! --match-set whiteip src -m set ! --match-set whiteip dst -m set ! --match-set whitezone dst -j gfw$interface
	iptables -t mangle -F gfw$interface
	iptables -t mangle -X gfw$interface

	sed -i "/gfw$interface\$/d" $rulefile
	sed -i "/gfw$interface /d" $rulefile

	ip route flush table gfw$interface 2>/dev/null
	ip rule del priority $mark

	deleted=1
}

handle_rule() {
	local interface
	local proto
	local port
	local realif
	config_get interface $1 interface
	config_get proto $1 proto
	config_get port $1 port
	realif=$(uci_get_state network "$interface" ifname "$interface")
	if [ "$PPP_IFACE" == "$realif" ]; then
		delete_rule $interface
	fi
}

ip_down_wall() {
	config_foreach handle_rule rule
}

if [ $enabled -eq 1 ]; then
	ip_down_wall
fi
